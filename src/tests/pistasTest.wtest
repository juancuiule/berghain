import main.djs.*
import main.patovas.*
import main.personas.*
import main.pistas.*
import main.berghain.*

object patovaBueno {

	method puedePasar(persona) {
		return true
	}

}

describe "Pistas" {

	fixture {
		berghain.contratarPatova(patovaBueno)
		berghain.entrar(gonzen)
		berghain.entrar(bianker)
		berghain.entrar(vonLukaz)
	}

	test  "cuando gonzen baila en mainRoom su energia disminuye 40" {
		mainRoom.bailar(gonzen)
		assert.equals(50, gonzen.energia())
	}

	test  "cuando gonzen baila en mainRoom su diversion aumenta 30" {
		mainRoom.bailar(gonzen)
		assert.equals(45, gonzen.diversion())
	}

	test  "cuando en panoramaBar está dixon bianker baila y su energia disminuye 60" {
		panoramaBar.contratarDj(dixon)
		panoramaBar.bailar(bianker)
		assert.equals(80, bianker.energia())
	}

	test  "cuando en panoramaBar está dixon bianker baila y su diversion aumenta 120" {
		panoramaBar.contratarDj(dixon)
		panoramaBar.bailar(bianker)
		assert.equals(200, bianker.diversion())
	}

	test  "cuando en panoramaBar está marcelDettmann vonLukaz baila y su energia queda en 0" {
		panoramaBar.contratarDj(marcelDettmann)
		panoramaBar.bailar(vonLukaz)
		assert.equals(0, vonLukaz.energia())
	}

	test  "cuando en panoramaBar está marcelDettmann vonLukaz baila y su diversion aumenta 1000" {
		panoramaBar.contratarDj(marcelDettmann)
		panoramaBar.bailar(vonLukaz)
		assert.equals(1070, vonLukaz.diversion())
	}

	test  "cuando en panoramaBar está tommyMunioz gonzen baila y su energia disminuye 80" {
		panoramaBar.contratarDj(tommyMunioz)
		panoramaBar.bailar(gonzen)
		assert.equals(10, gonzen.energia())
	}

	test  "cuando en panoramaBar está tommyMunioz gonzen baila y su diversion queda en 0" {
		panoramaBar.contratarDj(tommyMunioz)
		panoramaBar.bailar(gonzen)
		assert.equals(0, gonzen.diversion())
	}

}

